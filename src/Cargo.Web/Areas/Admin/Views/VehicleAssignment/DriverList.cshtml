@using Cargo.Web.Areas.Admin.Models.AssignmentViewModels
@model DriverAssignmentViewModel

@{
    ViewData["Title"] = "Driver List";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">Driver Management</h2>
                    <p class="text-muted mb-0">Manage driver assignments for <strong>@Model.CompanyName</strong></p>
                </div>
                <div class="d-flex gap-2">
                    <a asp-action="SelectCompany" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back
                    </a>
                    <a asp-action="Create" asp-route-companyId="@Model.CompanyId" class="btn btn-success">
                        <i class="fas fa-plus"></i> New Assignment
                    </a>
                    <a asp-action="VehicleList" asp-route-companyId="@Model.CompanyId" class="btn btn-info">
                        <i class="fas fa-truck"></i> View Vehicles
                    </a>
                </div>
            </div>

            <!-- Controls Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" id="driverSearch" class="form-control" placeholder="Search drivers...">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select id="statusFilter" class="form-select">
                                <option value="">All Status</option>
                                <option value="assigned">Assigned</option>
                                <option value="available">Available</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select id="sortBy" class="form-select">
                                <option value="name">Sort by Name</option>
                                <option value="license">Sort by License</option>
                                <option value="status">Sort by Status</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Loading State -->
            <div id="loadingState" class="text-center py-5" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-3 text-muted">Loading drivers...</p>
            </div>

            <!-- Empty State -->
            <div id="emptyState" class="text-center py-5" style="display: none;">
                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                <h4>No drivers found</h4>
                <p class="text-muted">There are no drivers available for this company.</p>
            </div>

            <!-- Drivers Grid -->
            <div id="driversContainer" class="row">
                @foreach (var driver in Model.Drivers)
                {
                    var assignment = Model.Assignments.FirstOrDefault(a => a.DriverId == driver.Id && a.Status == Cargo.Domain.Enums.AssignmentStatus.Active);
                    
                    <div class="col-lg-6 col-xl-4 mb-4 driver-card" data-status="@(assignment != null ? "assigned" : "available")" data-name="@driver.FirstName @driver.LastName" data-license="@driver.LicenseNumber">
                        <div class="card h-100 shadow-sm">
                            <div class="card-header bg-light">
                                <div class="d-flex align-items-center">
                                    <div class="avatar-circle me-3">
                                        <span class="avatar-text">@(driver.FirstName[0])@(driver.LastName[0])</span>
                                    </div>
                                    <div>
                                        <h5 class="card-title mb-0">@driver.FirstName @driver.LastName</h5>
                                        <small class="text-muted">@driver.Email</small>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <small class="text-muted d-block">License</small>
                                        <strong>@driver.LicenseNumber</strong>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted d-block">Status</small>
                                        @if (assignment != null)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check-circle me-1"></i>Assigned
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">
                                                <i class="fas fa-clock me-1"></i>Available
                                            </span>
                                        }
                                    </div>
                                </div>
                                
                                @if (assignment != null)
                                {
                                    <div class="alert alert-info p-2 mb-3">
                                        <small class="d-block text-muted">Assigned Vehicle</small>
                                        <strong>Vehicle ID: @assignment.VehicleId.ToString().Substring(0, 8)...</strong>
                                    </div>
                                }
                                
                                <div class="row">
                                    <div class="col-12">
                                        @if (assignment == null)
                                        {
                                            <a asp-action="Create" asp-route-companyId="@Model.CompanyId" asp-route-driverId="@driver.Id" 
                                               class="btn btn-primary btn-sm w-100">
                                                <i class="fas fa-plus me-1"></i> Assign Vehicle
                                            </a>
                                        }
                                        else
                                        {
                                            <button class="btn btn-secondary btn-sm w-100" disabled>
                                                <i class="fas fa-check me-1"></i> Already Assigned
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            <nav aria-label="Driver pagination" id="paginationContainer" style="display: none;">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- CSS Styles -->
<style>
    .avatar-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 1.2rem;
    }

    .driver-card {
        transition: transform 0.2s ease-in-out;
    }

    .driver-card:hover {
        transform: translateY(-2px);
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .card-header {
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

    .badge {
        font-size: 0.75em;
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
    }

    @@media (max-width: 768px) {
        .d-flex.justify-content-between {
            flex-direction: column;
            align-items: flex-start !important;
        }
        
        .d-flex.gap-2 {
            margin-top: 1rem;
        }
    }
</style>

<!-- JavaScript for Interactivity -->
@section Scripts {
    <script>
        $(document).ready(function() {
            const $driversContainer = $('#driversContainer');
            const $emptyState = $('#emptyState');
            const $loadingState = $('#loadingState');
            const $paginationContainer = $('#paginationContainer');
            
            // Search functionality
            $('#driverSearch').on('input', function() {
                filterDrivers();
            });
            
            // Status filter
            $('#statusFilter').on('change', function() {
                filterDrivers();
            });
            
            // Sort functionality
            $('#sortBy').on('change', function() {
                sortDrivers($(this).val());
            });
            
            function filterDrivers() {
                const searchTerm = $('#driverSearch').val().toLowerCase();
                const statusFilter = $('#statusFilter').val();
                
                let visibleCount = 0;
                
                $('.driver-card').each(function() {
                    const $card = $(this);
                    const name = $card.data('name').toLowerCase();
                    const license = $card.data('license').toLowerCase();
                    const status = $card.data('status');
                    
                    const matchesSearch = name.includes(searchTerm) || license.includes(searchTerm);
                    const matchesStatus = !statusFilter || status === statusFilter;
                    
                    if (matchesSearch && matchesStatus) {
                        $card.show();
                        visibleCount++;
                    } else {
                        $card.hide();
                    }
                });
                
                // Show/hide empty state
                if (visibleCount === 0) {
                    $emptyState.show();
                    $driversContainer.hide();
                } else {
                    $emptyState.hide();
                    $driversContainer.show();
                }
            }
            
            function sortDrivers(sortBy) {
                const $cards = $('.driver-card');
                const sortedCards = $cards.sort(function(a, b) {
                    const aName = $(a).data('name');
                    const bName = $(b).data('name');
                    const aLicense = $(a).data('license');
                    const bLicense = $(b).data('license');
                    const aStatus = $(a).data('status');
                    const bStatus = $(b).data('status');
                    
                    switch(sortBy) {
                        case 'name':
                            return aName.localeCompare(bName);
                        case 'license':
                            return aLicense.localeCompare(bLicense);
                        case 'status':
                            return aStatus.localeCompare(bStatus);
                        default:
                            return 0;
                    }
                });
                
                $driversContainer.empty().append(sortedCards);
            }
            
            // Initial check for empty state
            if ($('.driver-card:visible').length === 0) {
                $emptyState.show();
            }
        });
    </script>
}
